
# Taken from here:
# http://unscriptable.com/2009/03/20/debouncing-javascript-methods/

debounce = (func, threshold, execAsap) ->
  timeout = undefined
  debounced = ->
    delayed = ->
      func.apply obj, args unless execAsap
      timeout = null
    obj = this
    args = arguments
    if timeout
      clearTimeout timeout
    else if execAsap
      func.apply obj, args
    timeout = setTimeout(delayed, threshold or 100)



class MainController

  percents: [{"key":"gen","percents":[0.00518,0.00903,0.01343,0.01769,0.02185,0.02552,0.02917,0.03294,0.03735,0.04081,0.04538,0.04891,0.05197,0.05612,0.05937,0.06234,0.06728,0.07316,0.08044,0.08386,0.08902,0.09337,0.09685,0.10916,0.11418,0.12041,0.1294,0.13348,0.13923,0.14664,0.15635,0.16211,0.16543,0.17089,0.17547,0.18123,0.18777,0.19325,0.19774,0.20166,0.21114,0.21798,0.2246,0.23063,0.23573,0.24079,0.24753,0.25207,0.25734,0.2621]},{"key":"ex","percents":[0.00323,0.0077,0.01245,0.01831,0.02247,0.02739,0.03281,0.03847,0.04486,0.05103,0.05319,0.06294,0.06739,0.07371,0.07836,0.08513,0.08823,0.09315,0.09777,0.10161,0.10766,0.1129,0.11863,0.12176,0.12768,0.13368,0.13749,0.14523,0.15342,0.15981,0.16274,0.16966,0.17415,0.1812,0.18669,0.19323,0.19808,0.20354,0.21043,0.21553]},{"key":"lev","percents":[0.0033,0.00635,0.00923,0.01611,0.02202,0.02636,0.03291,0.03938,0.04348,0.04788,0.05517,0.05689,0.06865,0.07868,0.08492,0.09188,0.0953,0.09968,0.10586,0.11133,0.11546,0.1215,0.12954,0.1332,0.14271,0.1511,0.15714]},{"key":"num","percents":[0.00834,0.01327,0.02134,0.03006,0.03625,0.04129,0.0542,0.05875,0.06329,0.06872,0.07557,0.07809,0.083,0.09098,0.09804,0.10436,0.10944,0.11652,0.12102,0.1263,0.13243,0.14032,0.14573,0.15027,0.15322,0.16165,0.16568,0.17068,0.17724,0.1807,0.18899,0.19625,0.20247,0.20636,0.21249,0.21547]},{"key":"deut","percents":[0.00861,0.01521,0.02075,0.03085,0.03672,0.04111,0.047,0.05108,0.05734,0.06154,0.06795,0.07509,0.07952,0.08411,0.089,0.09364,0.09819,0.10231,0.10657,0.1111,0.11602,0.12157,0.1262,0.1308,0.13439,0.13892,0.1431,0.15728,0.16285,0.16749,0.17426,0.1829,0.18811,0.19024]},{"key":"josh","percents":[0.00392,0.00911,0.01274,0.01755,0.02111,0.02709,0.03339,0.04111,0.04656,0.05599,0.06072,0.06384,0.0693,0.07263,0.0796,0.08131,0.08562,0.0907,0.09712,0.09929,0.1065,0.11564,0.11953,0.12646]},{"key":"judg","percents":[0.00639,0.01097,0.017,0.02201,0.02731,0.03576,0.04202,0.04879,0.06,0.06326,0.07168,0.07448,0.07955,0.08424,0.08848,0.09627,0.09893,0.10577,0.1129,0.12243,0.12735]},{"key":"ruth","percents":[0.00442,0.00938,0.01271,0.01685]},{"key":"1sam","percents":[0.00538,0.01283,0.01659,0.02153,0.02443,0.02957,0.03325,0.03697,0.04338,0.04932,0.05254,0.05787,0.06273,0.07359,0.08073,0.0855,0.09724,0.10309,0.10809,0.11664,0.1201,0.12538,0.1308,0.13541,0.14525,0.15099,0.15368,0.1591,0.16184,0.16812,0.17057]},{"key":"2sam","percents":[0.0047,0.01086,0.0189,0.02196,0.02637,0.03141,0.0371,0.04053,0.04321,0.04732,0.05276,0.05937,0.06744,0.07486,0.08243,0.08721,0.0936,0.10067,0.11066,0.11625,0.12136,0.12745,0.13328,0.139]},{"key":"1kings","percents":[0.01035,0.02058,0.02643,0.02879,0.03525,0.04211,0.05181,0.06714,0.07306,0.0792,0.08816,0.0955,0.10297,0.10956,0.11588,0.12252,0.12674,0.13594,0.14071,0.15048,0.15674,0.16681]},{"key":"2kings","percents":[0.00448,0.00981,0.01533,0.02437,0.03109,0.03785,0.04319,0.04925,0.05722,0.06533,0.06976,0.07435,0.07955,0.0852,0.09226,0.09674,0.10563,0.11383,0.12113,0.12554,0.13062,0.13515,0.14463,0.14865,0.15519]},{"key":"1chron","percents":[0.00497,0.01109,0.01368,0.01949,0.02546,0.03309,0.03884,0.04245,0.04876,0.0514,0.05776,0.06471,0.06734,0.06982,0.07478,0.08076,0.0859,0.089,0.09325,0.0951,0.10127,0.10545,0.11,0.11385,0.11776,0.12276,0.12805,0.13342,0.14001]},{"key":"2chron","percents":[0.00379,0.0081,0.01109,0.01497,0.01813,0.0284,0.03357,0.03732,0.0438,0.04778,0.05144,0.05491,0.05955,0.06251,0.06613,0.06932,0.07248,0.07956,0.08212,0.09001,0.09427,0.09733,0.10226,0.10841,0.1148,0.11981,0.12142,0.12747,0.13513,0.14117,0.14644,0.15385,0.15927,0.1672,0.17364,0.17887]},{"key":"ezra","percents":[0.00247,0.00949,0.01302,0.01815,0.02193,0.02704,0.0327,0.03928,0.04345,0.04981]},{"key":"neh","percents":[0.00275,0.00732,0.0147,0.01816,0.0225,0.02642,0.03461,0.03918,0.04835,0.05314,0.05826,0.06483,0.07132]},{"key":"esther","percents":[0.00507,0.01085,0.01489,0.01838,0.02169,0.02487,0.02727,0.03173,0.03867,0.0393]},{"key":"job","percents":[0.00443,0.00729,0.01029,0.01257,0.01543,0.01859,0.02116,0.02348,0.02726,0.02993,0.03219,0.03491,0.03792,0.04057,0.04441,0.04698,0.04864,0.05087,0.05408,0.05742,0.06115,0.06424,0.0661,0.06926,0.06984,0.07116,0.0737,0.07659,0.07935,0.08292,0.08759,0.09032,0.09382,0.09783,0.09953,0.10299,0.10566,0.10969,0.11298,0.11631,0.11881,0.12187]},{"key":"ps","percents":[0.00083,0.0022,0.00318,0.00436,0.00614,0.00743,0.0097,0.01085,0.01583,0.01683,0.01793,0.0188,0.01978,0.02052,0.02184,0.02393,0.03019,0.03213,0.03333,0.03497,0.03895,0.03983,0.04099,0.04349,0.04476,0.04709,0.0485,0.04971,0.05123,0.05479,0.05644,0.0587,0.06123,0.06523,0.06673,0.07164,0.07422,0.07617,0.0792,0.08093,0.08276,0.08367,0.08677,0.08924,0.09056,0.09155,0.09312,0.09545,0.09804,0.10049,0.10187,0.10298,0.10399,0.10713,0.10886,0.11054,0.1121,0.11457,0.11629,0.1173,0.11904,0.12045,0.12181,0.12357,0.12583,0.12669,0.13132,0.1361,0.137,0.14027,0.14262,0.14542,0.14823,0.14941,0.15067,0.15287,0.16125,0.16317,0.16542,0.16739,0.16822,0.17018,0.17188,0.17341,0.17563,0.17632,0.17862,0.18453,0.18659,0.18836,0.19,0.19071,0.19318,0.19446,0.19607,0.19748,0.19859,0.19979,0.20037,0.20149,0.20465,0.20714,0.21109,0.21568,0.22098,0.22549,0.22697,0.23074,0.23169,0.23282,0.23396,0.23477,0.23729,0.2382,0.2391,0.2393,0.24211,0.25984,0.26046,0.26113,0.26201,0.26254,0.2633,0.26398,0.26465,0.26535,0.266,0.26685,0.26764,0.26809,0.27008,0.27049,0.27081,0.27299,0.27529,0.27653,0.27759,0.28021,0.28195,0.28335,0.28449,0.28627,0.28834,0.29068,0.29178,0.29289,0.29382,0.2952,0.29614,0.29674]},{"key":"prov","percents":[0.00376,0.006,0.00973,0.01268,0.01521,0.01907,0.02197,0.02591,0.0278,0.03113,0.03464,0.0376,0.04047,0.04422,0.04776,0.05132,0.05447,0.05701,0.06041,0.06356,0.06687,0.07008,0.07392,0.07776,0.0811,0.08405,0.08714,0.09082,0.09381,0.09788,0.10102]},{"key":"eccles","percents":[0.00271,0.00787,0.01093,0.01373,0.01705,0.0191,0.02315,0.02637,0.03006,0.03258,0.03432,0.03682]},{"key":"song","percents":[0.00234,0.00481,0.00682,0.00962,0.0126,0.01453,0.01676,0.01929]},{"key":"is","percents":[0.00553,0.00899,0.01283,0.01399,0.01996,0.0225,0.02686,0.03095,0.0345,0.04036,0.04364,0.04453,0.04823,0.05377,0.05539,0.0581,0.06082,0.06263,0.06729,0.06858,0.07133,0.07568,0.0789,0.08247,0.08479,0.08824,0.0909,0.09637,0.10104,0.10795,0.11005,0.11295,0.11715,0.12045,0.12232,0.12706,0.13432,0.13806,0.13988,0.14507,0.15008,0.15447,0.15901,0.16496,0.16999,0.17227,0.17546,0.1794,0.185,0.18746,0.19231,0.19505,0.19774,0.20109,0.2037,0.20627,0.21024,0.21383,0.21813,0.2226,0.22519,0.2278,0.23149,0.23368,0.23874,0.24443]},{"key":"jer","percents":[0.00347,0.01074,0.01641,0.02227,0.02811,0.03375,0.04051,0.04524,0.05034,0.05459,0.05945,0.06303,0.06804,0.07275,0.07736,0.08201,0.08775,0.09213,0.09567,0.09984,0.10303,0.10899,0.11718,0.11939,0.12665,0.13188,0.13706,0.14064,0.1474,0.15215,0.16063,0.16985,0.17541,0.18092,0.18536,0.19241,0.19653,0.20277,0.20661,0.21121,0.2156,0.22066,0.22364,0.23161,0.2326,0.23815,0.23959,0.24763,0.25574,0.26555,0.27775,0.28502]},{"key":"lam","percents":[0.0055,0.01125,0.01715,0.02112,0.02318]},{"key":"ezek","percents":[0.00524,0.00712,0.01256,0.01602,0.01989,0.02306,0.02807,0.03227,0.03503,0.03909,0.04342,0.0484,0.05328,0.05851,0.05991,0.07248,0.0777,0.08404,0.08647,0.09632,0.10324,0.10863,0.11804,0.12296,0.12625,0.13081,0.13708,0.14232,0.14689,0.15147,0.15574,0.16255,0.16998,0.17598,0.1785,0.18624,0.19187,0.19674,0.20248,0.21189,0.21681,0.22073,0.22653,0.23348,0.23886,0.24404,0.24885,0.25579]},{"key":"dan","percents":[0.00412,0.01445,0.02265,0.03089,0.03781,0.04447,0.05081,0.05644,0.06347,0.06785,0.07764,0.08023]},{"key":"hos","percents":[0.00167,0.00645,0.00752,0.01087,0.0133,0.01483,0.01752,0.01981,0.02295,0.02581,0.02768,0.02992,0.03244,0.03427]},{"key":"joel","percents":[0.00324,0.00868,0.00956,0.01319]},{"key":"amos","percents":[0.00271,0.00545,0.00806,0.01096,0.01543,0.01794,0.02099,0.02363,0.02705]},{"key":"obad","percents":[0.00412]},{"key":"jon","percents":[0.00316,0.00473,0.0066,0.00887]},{"key":"mic","percents":[0.00286,0.0055,0.00782,0.01097,0.01354,0.01643,0.02018]},{"key":"nahum","percents":[0.00237,0.00501,0.00851]},{"key":"hab","percents":[0.00299,0.00675,0.00988]},{"key":"zeph","percents":[0.00354,0.00655,0.01055]},{"key":"hag","percents":[0.00298,0.00769]},{"key":"zech","percents":[0.00343,0.00628,0.00843,0.01072,0.01291,0.01558,0.01803,0.02245,0.02575,0.02817,0.03136,0.03425,0.03638,0.04097]},{"key":"mal","percents":[0.00327,0.00688,0.01073,0.01195]},{"key":"mt","percents":[0.0036,0.00766,0.01037,0.01422,0.02127,0.02684,0.03107,0.03623,0.04207,0.0482,0.05259,0.06014,0.06884,0.07352,0.07897,0.08335,0.08769,0.09349,0.09827,0.10327,0.11083,0.11645,0.12221,0.12885,0.13546,0.14646,0.15574,0.15866]},{"key":"mk","percents":[0.00634,0.01097,0.01563,0.02129,0.02745,0.03616,0.04166,0.04728,0.05508,0.0631,0.06818,0.07534,0.08052,0.09129,0.09765,0.10069]},{"key":"lk","percents":[0.01026,0.01744,0.02322,0.02982,0.03621,0.04419,0.05239,0.06182,0.07174,0.07829,0.08707,0.09622,0.10211,0.10772,0.11269,0.11799,0.12306,0.12919,0.13584,0.14228,0.14746,0.157,0.16478,0.1719]},{"key":"jn","percents":[0.00704,0.01039,0.01561,0.02331,0.03005,0.03995,0.04682,0.05575,0.06161,0.0671,0.07483,0.08218,0.08787,0.09238,0.09643,0.10139,0.10516,0.11146,0.11845,0.12346,0.12826]},{"key":"acts","percents":[0.00445,0.01158,0.01585,0.02169,0.0287,0.03121,0.04104,0.04709,0.05414,0.06161,0.06604,0.07024,0.07875,0.08313,0.08937,0.0959,0.10175,0.1063,0.11305,0.11904,0.12605,0.13125,0.13756,0.14211,0.1474,0.15282,0.1602,0.16587]},{"key":"rom","percents":[0.00494,0.00887,0.01255,0.016,0.01954,0.02287,0.0267,0.03227,0.03672,0.03968,0.04492,0.04776,0.05004,0.05351,0.05816,0.06182]},{"key":"1cor","percents":[0.00423,0.00661,0.00961,0.01275,0.01471,0.01776,0.02407,0.02607,0.03017,0.03444,0.03898,0.04285,0.04475,0.05058,0.05794,0.06088]},{"key":"2cor","percents":[0.00382,0.00632,0.00886,0.01148,0.01452,0.01695,0.01988,0.02337,0.02578,0.02859,0.03357,0.03745,0.03962]},{"key":"gal","percents":[0.00317,0.00695,0.01109,0.01506,0.01815,0.02053]},{"key":"eph","percents":[0.00319,0.00609,0.00874,0.01297,0.01686,0.02005]},{"key":"phil","percents":[0.00415,0.00817,0.01126,0.01462]},{"key":"col","percents":[0.00423,0.00759,0.01095,0.01359]},{"key":"1thess","percents":[0.00167,0.00501,0.00706,0.00969,0.01261]},{"key":"2thess","percents":[0.00196,0.00465,0.00712]},{"key":"1tim","percents":[0.00319,0.00643,0.00829,0.01051,0.01267,0.01608,0.01964]},{"key":"2tim","percents":[0.0028,0.0064,0.00879,0.01174]},{"key":"tit","percents":[0.0025,0.0045,0.00674]},{"key":"philem","percents":[0.00307]},{"key":"heb","percents":[0.00216,0.00514,0.0078,0.01062,0.01278,0.01571,0.02001,0.02256,0.02708,0.03222,0.03835,0.0431,0.04664]},{"key":"jas","percents":[0.00379,0.00748,0.01014,0.01274,0.01605]},{"key":"1pet","percents":[0.00404,0.00794,0.01162,0.01454,0.01649]},{"key":"2pet","percents":[0.0034,0.00743,0.01064]},{"key":"1jn","percents":[0.0016,0.0063,0.01001,0.01318,0.01641]},{"key":"2jn","percents":[0.00202]},{"key":"3jn","percents":[0.00202]},{"key":"jude","percents":[0.00453]},{"key":"rev","percents":[0.00361,0.00862,0.01273,0.01514,0.01804,0.02141,0.02483,0.02728,0.0311,0.03329,0.03725,0.04045,0.04385,0.04802,0.04971,0.05326,0.05664,0.06179,0.06593,0.06891,0.07365,0.07721]}]

  init: (@container) ->
    # load Genesis 1
    @loadChapters 'gen1', 'gen2'
    # generate structure
    @chapters = $()
    for book in @percents
      for percent, i in book.percents
        @chapters.add $("<div class='chapter' id='#{book.key}#{i+1}' />")
          .appendTo(@container)
          .data
            percent: percent
            chapterNumber: i+1
            singleChapter: book.percents.length is 1
    null
  
  loadChapters: (keys...) ->
    deferreds = ($.get "/api/#{key}" for key in keys)
    $.when(deferreds...).done (responds...) =>
      responds = [responds] if typeof responds[0] is 'string'
      for respond, i in responds
        key = keys[i]
        data = JSON.parse respond[0]
        chapterEl = $("##{key}").data 'loaded', yes
        @renderChapter chapterEl, data
      @calculateHeights()
  
  renderChapter: (chapterEl, chapterData) ->
    chapterParams = chapterEl.data()
    html = ''
    titles = {}
    if chapterData.titles then for title in chapterData.titles
      titlesArr = titles[title.verse] or= []
      titlesArr.push title
    for verse, titlesArr of titles
      titlesArr.sort (t1, t2) -> t1.level < t2.level
    for verse, i in chapterData.verses
      if titlesArr = titles[i]
        for title in titlesArr
          tag = "h#{title.level}"
          html += "<#{tag}>#{title.text}</#{tag}>"
      html += "<div class='chapter-number'>#{chapterParams.chapterNumber}</div>" if i is 0
      verse = {text: verse} if typeof verse is 'string'
      classes = "verse#{if verse.commentary then ' commentary' else ''}#{if i is 0 then ' first' else ''}"
      verseHTML = "<div class='#{classes}'><span class='verse-number'>#{i+1}</span>#{verse.text}</div>"
      html += verseHTML
    chapterEl.addClass 'single-chapter' if chapterParams.singleChapter
    chapterEl.html html

  checkScrollPosition: (e) =>
    console.log $(e.target).scrollTop()
  
  calculateHeights: ->
    # $(document.body).height 5000



controller = new MainController

$ ->
  controller.init $('#book')
  $(window).scroll debounce controller.checkScrollPosition, 200


