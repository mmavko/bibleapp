
# Taken from here:
# http://unscriptable.com/2009/03/20/debouncing-javascript-methods/

debounce = (func, threshold, execAsap) ->
  timeout = undefined
  debounced = ->
    delayed = ->
      func.apply obj, args unless execAsap
      timeout = null
    obj = this
    args = arguments
    if timeout
      clearTimeout timeout
    else if execAsap
      func.apply obj, args
    timeout = setTimeout(delayed, threshold or 100)



class MainController

  percents: [{"key":"gen","percents":[0.09786,0.07272,0.08309,0.08059,0.07853,0.06942,0.0688,0.07133,0.08333,0.06538,0.08637,0.06662,0.05777,0.07853,0.0614,0.05604,0.09326,0.11116,0.13745,0.06464,0.0976,0.08209,0.06579,0.23251,0.09489,0.11764,0.16999,0.07702,0.10865,0.14004,0.18343,0.10877,0.06273,0.1032,0.0864,0.10889,0.12354,0.10346,0.08492,0.07413,0.17904,0.12923,0.12495,0.11407,0.09633,0.09556,0.12737,0.08581,0.09942,0.09002]},{"key":"ex","percents":[0.06096,0.08451,0.0897,0.11077,0.07856,0.09291,0.10243,0.10697,0.12065,0.11661,0.04088,0.18417,0.0841,0.11944,0.08775,0.1279,0.0586,0.09288,0.0874,0.07248,0.11425,0.09913,0.10815,0.05919,0.11189,0.11325,0.07201,0.14614,0.1549,0.12074,0.05518,0.13091,0.08469,0.13318,0.10382,0.12362,0.09152,0.10311,0.13026,0.0963]},{"key":"lev","percents":[0.06228,0.05777,0.05441,0.12987,0.11163,0.08209,0.12371,0.12227,0.07732,0.08327,0.13769,0.03242,0.22225,0.18948,0.11785,0.13152,0.06452,0.08289,0.1167,0.10334,0.07805,0.1141,0.15192,0.06909,0.17975,0.1585,0.11399]},{"key":"num","percents":[0.15764,0.09312,0.15248,0.16474,0.11679,0.09524,0.24392,0.08601,0.08587,0.10255,0.12928,0.04763,0.09282,0.15071,0.13341,0.11941,0.09592,0.13379,0.08504,0.09978,0.1157,0.14921,0.10222,0.08569,0.05565,0.15941,0.07617,0.09444,0.12389,0.06544,0.15655,0.13721,0.11741,0.07346,0.11593,0.0563]},{"key":"deut","percents":[0.16259,0.12474,0.10467,0.19089,0.11077,0.08301,0.11127,0.07708,0.11829,0.07938,0.12097,0.13494,0.08374,0.08663,0.0925,0.08757,0.08607,0.07773,0.0805,0.08563,0.09294,0.10476,0.08746,0.08693,0.06783,0.08566,0.07891,0.26797,0.10514,0.08766,0.1279,0.16336,0.0983,0.04035]},{"key":"josh","percents":[0.07413,0.09792,0.06868,0.09085,0.06724,0.11295,0.11903,0.14591,0.10296,0.17804,0.08949,0.05886,0.10314,0.06305,0.13152,0.03234,0.08156,0.09592,0.1213,0.04088,0.1363,0.17267,0.07357,0.13085]},{"key":"judg","percents":[0.12074,0.08648,0.11399,0.09453,0.10025,0.15953,0.11838,0.12796,0.21167,0.06155,0.15923,0.05279,0.09583,0.08858,0.08021,0.147,0.0504,0.12914,0.1348,0.18001,0.09294]},{"key":"ruth","percents":[0.08351,0.09362,0.06299,0.07814]},{"key":"1sam","percents":[0.10169,0.14063,0.07101,0.09335,0.05494,0.09695,0.06956,0.07024,0.12121,0.11213,0.0609,0.10066,0.09179,0.20528,0.1348,0.09014,0.2219,0.11039,0.09459,0.16147,0.06532,0.09972,0.10249,0.08707,0.18585,0.10859,0.05079,0.10228,0.05188,0.11861,0.04619]},{"key":"2sam","percents":[0.08887,0.11634,0.1518,0.0578,0.08339,0.09518,0.1075,0.06485,0.05061,0.07764,0.10281,0.12492,0.15242,0.14007,0.14311,0.0902,0.12074,0.13356,0.18892,0.1055,0.09659,0.11505,0.11007,0.10818]},{"key":"1kings","percents":[0.19549,0.1934,0.11048,0.04457,0.12209,0.12964,0.18311,0.28975,0.11183,0.11596,0.1692,0.13866,0.14116,0.1246,0.11941,0.12542,0.0797,0.17374,0.09014,0.18458,0.11823,0.19039]},{"key":"2kings","percents":[0.08463,0.10078,0.10414,0.17079,0.12707,0.12772,0.10087,0.11449,0.15057,0.15322,0.08363,0.08684,0.09813,0.10671,0.13344,0.08457,0.16805,0.15493,0.13789,0.08324,0.09603,0.08557,0.17922,0.07581,0.12365]},{"key":"1chron","percents":[0.09397,0.11546,0.04902,0.10977,0.11284,0.14417,0.10856,0.06821,0.11917,0.04993,0.12021,0.13129,0.04958,0.04696,0.09362,0.11301,0.09704,0.05869,0.08029,0.03484,0.11658,0.07906,0.08587,0.07275,0.07393,0.09453,0.09984,0.10152,0.12451]},{"key":"2chron","percents":[0.07151,0.08156,0.05639,0.0734,0.05963,0.19404,0.09777,0.07071,0.12256,0.07511,0.06906,0.06556,0.08772,0.05592,0.06839,0.06034,0.05963,0.13374,0.04849,0.14903,0.08047,0.05786,0.09315,0.11611,0.12077,0.09468,0.03039,0.11419,0.14476,0.11419,0.09951,0.1399,0.10246,0.14983,0.12168,0.09886]},{"key":"ezra","percents":[0.04672,0.13259,0.06671,0.09692,0.07136,0.09665,0.10685,0.12436,0.07876,0.12006]},{"key":"neh","percents":[0.05197,0.08628,0.13945,0.06532,0.08197,0.07422,0.15469,0.0864,0.17323,0.09038,0.09683,0.12407,0.12256]},{"key":"esther","percents":[0.09586,0.10912,0.07626,0.06603,0.06252,0.0601,0.04531,0.08436,0.13099,0.012]},{"key":"job","percents":[0.08371,0.05406,0.05671,0.04298,0.05409,0.05963,0.04867,0.04377,0.07148,0.05035,0.04265,0.05141,0.05683,0.05011,0.07257,0.04861,0.03139,0.04212,0.06052,0.0632,0.07036,0.05839,0.03522,0.05972,0.01088,0.02494,0.04811,0.05444,0.05229,0.06732,0.08822,0.05164,0.06615,0.07564,0.03219,0.06532,0.05055,0.07611,0.06223,0.06276,0.04734,0.05783]},{"key":"ps","percents":[0.01568,0.02591,0.01854,0.02217,0.03363,0.0245,0.04283,0.02181,0.094,0.01884,0.0209,0.01645,0.01836,0.01397,0.02506,0.03953,0.11811,0.03673,0.02261,0.03113,0.07511,0.01662,0.02187,0.04734,0.02399,0.04401,0.02653,0.02296,0.02874,0.0673,0.03107,0.04265,0.04787,0.07549,0.02833,0.09291,0.0487,0.03673,0.05736,0.03272,0.03449,0.0173,0.05851,0.04666,0.02491,0.01872,0.02962,0.04404,0.04896,0.04631,0.02597,0.02108,0.01907,0.05925,0.03266,0.03189,0.02945,0.04654,0.03248,0.01922,0.03284,0.02656,0.02582,0.03316,0.04271,0.01633,0.08737,0.0904,0.01698,0.06172,0.04448,0.05282,0.05318,0.02223,0.02388,0.04141,0.15841,0.0362,0.04253,0.03726,0.01565,0.03699,0.03216,0.02898,0.04183,0.013,0.04345,0.11175,0.03885,0.03354,0.03095,0.01344,0.04657,0.02429,0.0303,0.02668,0.02099,0.02276,0.01097,0.02116,0.05969,0.04702,0.07449,0.08687,0.09998,0.08531,0.02794,0.07122,0.01798,0.0214,0.02149,0.01527,0.0476,0.01716,0.01698,0.00389,0.05312,0.33491,0.01161,0.01279,0.01651,0.01014,0.01438,0.01273,0.01276,0.01321,0.01229,0.01606,0.01486,0.00855,0.03752,0.00775,0.00616,0.04112,0.04339,0.02337,0.02004,0.04949,0.03301,0.02632,0.02161,0.0336,0.03914,0.04424,0.02072,0.02102,0.01748,0.0262,0.0176,0.01147]},{"key":"prov","percents":[0.07101,0.04233,0.07057,0.05571,0.04778,0.0729,0.05483,0.07446,0.03561,0.06287,0.06632,0.05601,0.05421,0.07083,0.06688,0.06724,0.05957,0.04802,0.06426,0.05934,0.06255,0.06069,0.07263,0.07245,0.06308,0.05583,0.05828,0.06968,0.05633,0.07699,0.05922]},{"key":"eccles","percents":[0.05114,0.09763,0.0578,0.05282,0.06279,0.03867,0.07658,0.06081,0.06968,0.04766,0.03278,0.04722]},{"key":"song","percents":[0.04424,0.0466,0.03791,0.05294,0.05627,0.03652,0.04218,0.04772]},{"key":"is","percents":[0.10452,0.06532,0.07248,0.02199,0.11275,0.04799,0.08236,0.07732,0.06712,0.11071,0.06184,0.01692,0.0698,0.10482,0.03057,0.05123,0.05129,0.03413,0.08808,0.02435,0.05209,0.08215,0.06084,0.06741,0.04374,0.06523,0.05032,0.10323,0.08831,0.13058,0.03959,0.05489,0.07926,0.06243,0.03534,0.08943,0.13715,0.0708,0.03437,0.09798,0.09474,0.08286,0.08575,0.11251,0.09503,0.04307,0.06028,0.07431,0.10579,0.04654,0.09155,0.05191,0.0507,0.0634,0.04926,0.04852,0.07511,0.06774,0.08118,0.08457,0.04881,0.04928,0.06989,0.04121,0.09571,0.10756]},{"key":"jer","percents":[0.06547,0.13742,0.10706,0.11083,0.11033,0.10647,0.12784,0.0892,0.09645,0.08029,0.09188,0.06753,0.09471,0.08887,0.08728,0.08772,0.10839,0.08292,0.06688,0.07873,0.06022,0.11254,0.15481,0.04171,0.13713,0.09886,0.09786,0.06771,0.12769,0.08976,0.16018,0.17412,0.10508,0.10405,0.08404,0.13306,0.07794,0.11782,0.07248,0.08701,0.08298,0.09547,0.05627,0.15074,0.01869,0.1047,0.02721,0.15207,0.15307,0.18541,0.23054,0.13733]},{"key":"lam","percents":[0.10391,0.10856,0.11154,0.07505,0.03891]},{"key":"ezek","percents":[0.09901,0.03546,0.10281,0.06532,0.07319,0.05981,0.09471,0.07929,0.05217,0.07664,0.08189,0.09412,0.09226,0.09875,0.0265,0.23743,0.0986,0.11979,0.04584,0.18623,0.13061,0.10184,0.17774,0.093,0.06217,0.08625,0.11832,0.09898,0.08648,0.08643,0.08068,0.12867,0.1404,0.11334,0.04766,0.14617,0.10629,0.092,0.10844,0.1778,0.093,0.07407,0.10951,0.13135,0.10166,0.09792,0.09082,0.13108]},{"key":"dan","percents":[0.07791,0.19511,0.15499,0.15561,0.13064,0.12598,0.11965,0.10644,0.13285,0.08274,0.18491,0.04902]},{"key":"hos","percents":[0.03148,0.09046,0.02007,0.06332,0.04587,0.02889,0.05091,0.04333,0.05925,0.05409,0.03522,0.04236,0.04766,0.03452]},{"key":"joel","percents":[0.06128,0.10264,0.01665,0.06871]},{"key":"amos","percents":[0.05111,0.05176,0.04949,0.05468,0.08451,0.04746,0.05748,0.04996,0.06467]},{"key":"obad","percents":[0.07785]},{"key":"jon","percents":[0.05969,0.02959,0.03531,0.04289]},{"key":"mic","percents":[0.05406,0.0499,0.0438,0.05954,0.04855,0.05456,0.07092]},{"key":"nahum","percents":[0.0448,0.0499,0.06603]},{"key":"hab","percents":[0.05651,0.07098,0.05919]},{"key":"zeph","percents":[0.06697,0.05677,0.07564]},{"key":"hag","percents":[0.05636,0.08896]},{"key":"zech","percents":[0.06488,0.05382,0.04047,0.04345,0.04133,0.05032,0.04637,0.08357,0.06237,0.0456,0.06025,0.05456,0.04038,0.08657]},{"key":"mal","percents":[0.06175,0.06818,0.07275,0.02299]},{"key":"mt","percents":[0.068,0.07673,0.0512,0.07269,0.13329,0.10517,0.07994,0.09739,0.11033,0.11584,0.08304,0.14255,0.16445,0.0884,0.10284,0.08277,0.08212,0.10956,0.09029,0.09447,0.14287,0.106,0.10897,0.12533,0.12501,0.20775,0.17536,0.05506]},{"key":"mk","percents":[0.11982,0.08752,0.08799,0.10685,0.11634,0.16466,0.10393,0.10615,0.14735,0.15145,0.09601,0.13527,0.09789,0.20345,0.12012,0.05745]},{"key":"lk","percents":[0.19378,0.13574,0.10915,0.12474,0.12065,0.15083,0.15496,0.17816,0.18741,0.12371,0.16589,0.17288,0.11113,0.10612,0.09394,0.09996,0.09592,0.11575,0.12566,0.12165,0.09783,0.18028,0.14706,0.1345]},{"key":"jn","percents":[0.133,0.06326,0.09872,0.14538,0.12737,0.18703,0.12981,0.16867,0.11077,0.10373,0.14594,0.13892,0.10747,0.08525,0.07655,0.09362,0.0713,0.11906,0.13197,0.09471,0.09073]},{"key":"acts","percents":[0.0841,0.13471,0.08065,0.11027,0.13253,0.04734,0.18585,0.11428,0.13315,0.14107,0.08368,0.07938,0.16085,0.08265,0.11794,0.12342,0.11039,0.0861,0.12743,0.11328,0.13238,0.09825,0.11911,0.08607,0.09987,0.10249,0.13945,0.10709]},{"key":"rom","percents":[0.09329,0.07437,0.06945,0.06511,0.06688,0.06299,0.07225,0.10529,0.08413,0.05592,0.09907,0.05353,0.04318,0.0655,0.08778,0.06924]},{"key":"1cor","percents":[0.07982,0.04501,0.05668,0.05934,0.03696,0.05763,0.11935,0.0377,0.07744,0.08065,0.08584,0.07322,0.03587,0.11004,0.1391,0.05547]},{"key":"2cor","percents":[0.0721,0.04728,0.04793,0.04952,0.05745,0.04595,0.05539,0.06585,0.0456,0.05303,0.09406,0.0734,0.04106]},{"key":"gal","percents":[0.05993,0.07145,0.07823,0.0749,0.05845,0.04489]},{"key":"eph","percents":[0.06022,0.0548,0.05011,0.08,0.07337,0.06025]},{"key":"phil","percents":[0.07832,0.07608,0.05825,0.06358]},{"key":"col","percents":[0.07994,0.06337,0.06349,0.05002]},{"key":"1thess","percents":[0.03154,0.06317,0.03864,0.0497,0.05527]},{"key":"2thess","percents":[0.03711,0.05079,0.0466]},{"key":"1tim","percents":[0.06034,0.06113,0.0352,0.04195,0.04071,0.06455,0.06712]},{"key":"2tim","percents":[0.05285,0.068,0.04525,0.05562]},{"key":"tit","percents":[0.04728,0.0377,0.04227]},{"key":"philem","percents":[0.05804]},{"key":"heb","percents":[0.04088,0.05618,0.05035,0.05315,0.04085,0.05547,0.08109,0.04822,0.08542,0.09707,0.11581,0.08982,0.06676]},{"key":"jas","percents":[0.07151,0.06986,0.05014,0.04923,0.06252]},{"key":"1pet","percents":[0.07631,0.07378,0.06951,0.05512,0.03673]},{"key":"2pet","percents":[0.06432,0.07599,0.06075]},{"key":"1jn","percents":[0.03027,0.08884,0.06992,0.05993,0.0611]},{"key":"2jn","percents":[0.0382]},{"key":"3jn","percents":[0.03808]},{"key":"jude","percents":[0.08566]},{"key":"rev","percents":[0.06818,0.09468,0.07773,0.04536,0.0548,0.06373,0.06461,0.04628,0.07213,0.04136,0.07484,0.06057,0.06411,0.07879,0.03204,0.06697,0.06396,0.09724,0.07811,0.05645,0.08958,0.06709]}]

  init: (@container) ->
    # load Genesis 1
    @loadChapters 'gen1', 'gen2'
    # generate structure
    @chapters = $()
    for book in @percents
      for percent, i in book.percents
        @chapters.add $("<div class='chapter' id='ch-#{book.key}#{i+1}' />")
          .appendTo(@container)
          .data
            percent: percent
            chapterNumber: i+1
            singleChapter: book.percents.length is 1
    # reform @percents
    percents = {}
    for book in @percents
      for percent, i in book.percents
        percents["#{book.key}#{i+1}"] = percent
    @percents = percents
    null
  
  loadChapters: (keys...) ->
    deferreds = ($.get "/api/#{key}" for key in keys)
    $.when(deferreds...)
      .done( (responds...) =>
        responds = [responds] if typeof responds[0] is 'string'
        for respond, i in responds
          key = keys[i]
          data = JSON.parse respond[0]
          @renderChapter key, data
        @calculateHeights()
      ).fail -> alert "Error on loading."
  
  renderChapter: (key, chapterData) ->
    chapterEl = $("#ch-#{key}")
    return if chapterEl.data 'loaded'
    chapterParams = chapterEl.data()
    html = ''
    titles = {}
    if chapterData.titles then for title in chapterData.titles
      titlesArr = titles[title.verse] or= []
      titlesArr.push title
    for verse, titlesArr of titles
      titlesArr.sort (t1, t2) -> t1.level < t2.level
    for verse, i in chapterData.verses
      if titlesArr = titles[i]
        for title in titlesArr
          tag = "h#{title.level}"
          html += "<#{tag}>#{title.text}</#{tag}>"
      html += "<div class='chapter-number'>#{chapterParams.chapterNumber}</div>" if i is 0
      verse = {text: verse} if typeof verse is 'string'
      classes = "verse#{if verse.commentary then ' commentary' else ''}#{if i is 0 then ' first' else ''}"
      verseHTML = "<div class='#{classes}'><span class='verse-number'>#{i+1}</span>#{verse.text}</div>"
      html += verseHTML
    chapterEl.addClass 'single-chapter' if chapterParams.singleChapter
    chapterEl.html html
    chapterEl.height()
    chapterEl.data
      key: key
      loaded: yes

  checkScrollPosition: (e) =>
    console.log $(e.target).scrollTop()
  
  calculateHeights: ->
    # $(document.body).height 5000



controller = new MainController

$ ->
  controller.init $('#book')
  $(window).scroll debounce controller.checkScrollPosition, 200


